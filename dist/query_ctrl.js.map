{"version":3,"sources":["../src/query_ctrl.js"],"names":["QueryCtrl","_","GenericDatasourceQueryCtrl","$scope","$injector","$http","$q","datasourceSrv","target","humioQuery","humioDataspace","undefined","dataspaces","_getHumioDataspaces","then","r","linkSettings","humioLink","datasource","url","_serializeQueryOpts","panelCtrl","refresh","obj","str","p","push","encodeURIComponent","join","requestOpts","method","headers","backendSrv","datasourceRequest","res","data","map","ds","value","id","name","sortBy","when","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACEA,e,kBAAAA,S;;AAGKC,O;;;;;;;;;;;;;;;;;;;;;4CAEMC,0B;;;AAEX,4CAAYC,MAAZ,EAAoBC,SAApB,EAA+BC,KAA/B,EAAsCC,EAAtC,EAA0CC,aAA1C,EAAyD;AAAA;;AAAA,8JACjDJ,MADiD,EACzCC,SADyC;;AAGvD,gBAAKC,KAAL,GAAaA,KAAb;AACA,gBAAKF,MAAL,GAAcA,MAAd;AACA,gBAAKG,EAAL,GAAUA,EAAV;;AAEA,gBAAKE,MAAL,CAAYC,UAAZ,GAAyB,MAAKD,MAAL,CAAYC,UAAZ,IAA0B,aAAnD;AACA,gBAAKD,MAAL,CAAYE,cAAZ,GAA6B,MAAKF,MAAL,CAAYE,cAAZ,IAA8BC,SAA3D;;AAEA,gBAAKC,UAAL,GAAkB,EAAlB;AACA,gBAAKC,mBAAL,GAA2BC,IAA3B,CAAgC,UAACC,CAAD,EAAO;AACrC,kBAAKH,UAAL,GAAkBG,CAAlB;AACD,WAFD;;AAIA;AACA,cAAIC,eAAe;AACjB,0BAAc,YADG;AAEjB,qBAAS,MAAKR,MAAL,CAAYC,UAFJ;AAGjB,oBAAQ,KAHS,EAGF;AACf,qBAAS,KAJQ,EAID;AAChB,sBAAU,GALO;AAMjB,kBAAM,EANW;AAOjB,kBAAM,EAPW;AAQjB,kBAAM,EARW;AASjB,kBAAM,EATW;AAUjB,kBAAM,KAVW;AAWjB,iBAAK,GAXY;AAYjB,kBAAM,EAZW;AAajB,mBAAO,EAbU;AAcjB,iBAAK,EAdY;AAejB,kBAAM,KAfW;AAgBjB,mBAAO;AAhBU,WAAnB;;AAmBA,gBAAKQ,SAAL,GAAiB,MAAKC,UAAL,CAAgBC,GAAhB,GAAsB,GAAtB,GAA4B,MAAKX,MAAL,CAAYE,cAAxC,GACf,UADe,GACF,MAAKU,mBAAL,CAAyBJ,YAAzB,CADf;;AAnCuD;AAsCxD;;;;6CAEkB;AACjB,iBAAKK,SAAL,CAAeC,OAAf,GADiB,CACS;AAC3B;;;0CAEe;AACd,mBAAO,KAAKL,SAAL,IAAkBN,SAAzB;AACD;;;8CAEmBY,G,EAAK;AACvB,gBAAIC,MAAM,EAAV;AACA,iBAAK,IAAIC,CAAT,IAAcF,GAAd;AACEC,kBAAIE,IAAJ,CAASC,mBAAmBF,CAAnB,IAAwB,GAAxB,GAA8BE,mBAAmBJ,IAAIE,CAAJ,CAAnB,CAAvC;AADF,aAEA,OAAOD,IAAII,IAAJ,CAAS,GAAT,CAAP;AACD;;;gDAEqB;AACpB,gBAAI,KAAKV,UAAL,CAAgBC,GAApB,EAAyB;;AAEvB,kBAAIU,cAAc;AAChBC,wBAAQ,KADQ;AAEhBX,qBAAK,KAAKD,UAAL,CAAgBC,GAAhB,GAAsB,oBAFX;AAGhBY,yBAAS,KAAKb,UAAL,CAAgBa;AAHT,eAAlB;;AAMA,qBAAO,KAAKb,UAAL,CAAgBc,UAAhB,CAA2BC,iBAA3B,CAA6CJ,WAA7C,EAA0Df,IAA1D,CAA+D,UAACC,CAAD,EAAO;AAC3E,oBAAImB,MAAMnB,EAAEoB,IAAF,CAAOC,GAAP,CAAW,UAACC,EAAD,EAAQ;AAC3B,yBAAQ;AACNC,2BAAOD,GAAGE,EADJ;AAENC,0BAAMH,GAAGE;AAFH,mBAAR;AAID,iBALS,CAAV;AAMA,uBAAOtC,EAAEwC,MAAF,CAASP,GAAT,EAAc,CAAC,MAAD,CAAd,CAAP;AACD,eARM,CAAP;AASD,aAjBD,MAiBO;AACL,qBAAO,KAAK5B,EAAL,CAAQoC,IAAR,CAAa,EAAb,CAAP;AACD;AACF;;;;QA9E6C1C,S;;;;AAiFhDE,iCAA2ByC,WAA3B,GAAyC,4BAAzC","file":"query_ctrl.js","sourcesContent":["import {\n  QueryCtrl\n} from 'app/plugins/sdk';\nimport './css/query-editor.css!';\nimport _ from \"lodash\";\n\nexport class GenericDatasourceQueryCtrl extends QueryCtrl {\n\n  constructor($scope, $injector, $http, $q, datasourceSrv) {\n    super($scope, $injector);\n\n    this.$http = $http;\n    this.$scope = $scope;\n    this.$q = $q;\n\n    this.target.humioQuery = this.target.humioQuery || 'timechart()';\n    this.target.humioDataspace = this.target.humioDataspace || undefined;\n\n    this.dataspaces = [];\n    this._getHumioDataspaces().then((r) => {\n      this.dataspaces = r;\n    });\n\n    // NOTE: settings for timechart\n    let linkSettings = {\n      'widgetType': 'time-chart',\n      'query': this.target.humioQuery,\n      'live': false, // TODO: take from grafana\n      'start': '24h', // TODO: take time frame from grafana\n      'legend': 'y',\n      'lx': '',\n      'ly': '',\n      'mn': '',\n      'mx': '',\n      'op': '0.2',\n      'p': 'a',\n      'pl': '',\n      'plY': '',\n      's': '',\n      'sc': 'lin',\n      'stp': 'y'\n    }\n\n    this.humioLink = this.datasource.url + '/' + this.target.humioDataspace +\n      '/search?' + this._serializeQueryOpts(linkSettings);\n\n  }\n\n  onChangeInternal() {\n    this.panelCtrl.refresh(); // Asks the panel to refresh data.\n  }\n\n  showHumioLink() {\n    return this.humioLink != undefined\n  }\n\n  _serializeQueryOpts(obj) {\n    var str = [];\n    for (var p in obj)\n      str.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(obj[p]));\n    return str.join(\"&\");\n  }\n\n  _getHumioDataspaces() {\n    if (this.datasource.url) {\n\n      var requestOpts = {\n        method: 'GET',\n        url: this.datasource.url + '/api/v1/dataspaces',\n        headers: this.datasource.headers\n      };\n\n      return this.datasource.backendSrv.datasourceRequest(requestOpts).then((r) => {\n        let res = r.data.map((ds) => {\n          return ({\n            value: ds.id,\n            name: ds.id\n          })\n        });\n        return _.sortBy(res, ['name']);\n      });\n    } else {\n      return this.$q.when([]);\n    }\n  }\n}\n\nGenericDatasourceQueryCtrl.templateUrl = 'partials/query.editor.html';\n"]}