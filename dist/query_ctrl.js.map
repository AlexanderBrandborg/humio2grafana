{"version":3,"sources":["../src/query_ctrl.js"],"names":["QueryCtrl","_","HumioHelper","GenericDatasourceQueryCtrl","$scope","$injector","$http","$q","datasourceSrv","$location","target","humioQuery","humioDataspace","undefined","dataspaces","_getHumioDataspaces","then","r","isLive","search","hasOwnProperty","checkToDateNow","datasource","timeRange","raw","to","start","end","parseDateFrom","from","_d","getTime","linkSettings","widgetType","getPanelType","url","_serializeQueryOpts","panelCtrl","refresh","obj","str","p","push","encodeURIComponent","join","requestOpts","method","headers","backendSrv","datasourceRequest","res","data","map","ds","value","id","name","sortBy","when","templateUrl"],"mappings":"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","file":"query_ctrl.js","sourcesContent":["import {\n  QueryCtrl\n} from 'app/plugins/sdk';\nimport './css/query-editor.css!';\nimport _ from \"lodash\";\nimport {\n  HumioHelper\n} from \"./helper\";\n\nexport class GenericDatasourceQueryCtrl extends QueryCtrl {\n\n  constructor($scope, $injector, $http, $q, datasourceSrv, $location) {\n    super($scope, $injector);\n\n    this.$http = $http;\n    this.$scope = $scope;\n    this.$q = $q;\n    this.$location = $location;\n\n    this.target.humioQuery = this.target.humioQuery || 'timechart()';\n    this.target.humioDataspace = this.target.humioDataspace || undefined;\n\n    this.dataspaces = [];\n    this._getHumioDataspaces().then((r) => {\n      this.dataspaces = r;\n    });\n  }\n\n  getHumioLink() {\n    // NOTE: settings for timechart\n    let isLive = this.$location.search().hasOwnProperty('refresh') &&\n      (HumioHelper.checkToDateNow(this.datasource.timeRange.raw.to));\n\n    let start = '24h';\n    let end = undefined;\n\n    if (isLive) {\n      start = HumioHelper.parseDateFrom(this.datasource.timeRange.raw.from);\n    } else {\n      start = this.datasource.timeRange.from._d.getTime();\n      end = this.datasource.timeRange.to._d.getTime();\n    }\n\n    let linkSettings = {\n      'query': this.target.humioQuery,\n      'live': isLive,\n      'start': start,\n    }\n\n    if (end) {\n      linkSettings['end'] = end;\n    }\n\n    let widgetType = HumioHelper.getPanelType(this.target.humioQuery);\n    if (widgetType == 'time-chart') {\n      linkSettings['widgetType'] = widgetType;\n      linkSettings['legend'] = 'y';\n      linkSettings['lx'] = '';\n      linkSettings['ly'] = '';\n      linkSettings['mn'] = '';\n      linkSettings['mx'] = '';\n      linkSettings['op'] = '0.2';\n      linkSettings['p'] = 'a';\n      linkSettings['pl'] = '';\n      linkSettings['plY'] = '';\n      linkSettings['s'] = '';\n      linkSettings['sc'] = 'lin';\n      linkSettings['stp'] = 'y';\n    }\n\n    return this.datasource.url + '/' + this.target.humioDataspace +\n      '/search?' + this._serializeQueryOpts(linkSettings);\n  }\n\n  onChangeInternal() {\n    this.panelCtrl.refresh(); // Asks the panel to refresh data.\n  }\n\n  showHumioLink() {\n    if (this.datasource.timeRange) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  _serializeQueryOpts(obj) {\n    var str = [];\n    for (var p in obj)\n      str.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(obj[p]));\n    return str.join(\"&\");\n  }\n\n  _getHumioDataspaces() {\n    if (this.datasource.url) {\n\n      var requestOpts = {\n        method: 'GET',\n        url: this.datasource.url + '/api/v1/dataspaces',\n        headers: this.datasource.headers\n      };\n\n      return this.datasource.backendSrv.datasourceRequest(requestOpts).then((r) => {\n        let res = r.data.map((ds) => {\n          return ({\n            value: ds.id,\n            name: ds.id\n          })\n        });\n        return _.sortBy(res, ['name']);\n      });\n    } else {\n      return this.$q.when([]);\n    }\n  }\n}\n\nGenericDatasourceQueryCtrl.templateUrl = 'partials/query.editor.html';\n"]}