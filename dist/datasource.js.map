{"version":3,"sources":["../src/datasource.js"],"names":["_","HumioHelper","GenericDatasource","instanceSettings","$q","backendSrv","templateSrv","$location","$rootScope","type","url","replace","name","headers","jsonData","humioToken","timeRange","undefined","queryParams","options","panelId","humioQuery","targets","humioDataspace","query","range","when","data","dt","Date","getTimezoneOffset","queryId","failCounter","isLive","resolve","reject","handleErr","err","console","log","status","_composeQuery","then","handleRes","appEvent","r","done","_composeResult","clone","timeseriesField","seriesField","metaData","extraData","series","valueField","filter","fields","f","i","events","length","ev","parseInt","_bucket","push","keys","map","s","target","datapoints","workDone","totalWork","toFixed","setTimeout","queryOptions","resFx","currentTarget","hasOwnProperty","timechart","isAggregate","queryDt","grafanaQueryOpts","refresh","search","checkToDateNow","raw","to","_stopExecution","start","parseDateFrom","from","_composeLiveQuery","_pollQuery","_d","getTime","end","_initQuery","id","doRequest","method","response","message","title","annotation","annotationQuery","datasource","enable","iconColor","rangeRaw","result","withCredentials","datasourceRequest"],"mappings":";;;;;;;;;;;;;;;AAAOA,O;;AACEC,iB,WAAAA,W;;;;;;;;;;;;;;;;;;;;;mCAEIC,iB;AAEX,mCAAYC,gBAAZ,EAA8BC,EAA9B,EAAkCC,UAAlC,EAA8CC,WAA9C,EAA2DC,SAA3D,EAAsEC,UAAtE,EAAkF;AAAA;;AAChF,eAAKC,IAAL,GAAYN,iBAAiBM,IAA7B;AACA,eAAKC,GAAL,GAAWP,iBAAiBO,GAAjB,CAAqBC,OAArB,CAA6B,KAA7B,EAAoC,EAApC,CAAX;AACA,eAAKC,IAAL,GAAYT,iBAAiBS,IAA7B;;AAEA,eAAKR,EAAL,GAAUA,EAAV;AACA,eAAKG,SAAL,GAAiBA,SAAjB;AACA,eAAKF,UAAL,GAAkBA,UAAlB;AACA,eAAKC,WAAL,GAAmBA,WAAnB;AACA,eAAKE,UAAL,GAAkBA,UAAlB;AACA;;AAEA,eAAKK,OAAL,GAAe;AACb,4BAAgB,kBADH;AAEb,6BAAiB,YAAYV,iBAAiBW,QAAjB,CAA0BC;AAF1C,WAAf;;AAKA;AACA,eAAKC,SAAL,GAAiBC,SAAjB;;AAEA;AACA,eAAKC,WAAL,GAAmB,EAAnB;AACD;;;;gCAEKC,O,EAAS;AAAA;;AACb,gBAAIC,UAAUD,QAAQC,OAAtB;AACA,gBAAIC,aAAaF,QAAQG,OAAR,CAAgB,CAAhB,EAAmBD,UAApC;AACA,gBAAIE,iBAAiBJ,QAAQG,OAAR,CAAgB,CAAhB,EAAmBC,cAAxC;AACA,gBAAIC,QAAQL,OAAZ,CAJa,CAIQ;AACrB,iBAAKH,SAAL,GAAiBG,QAAQM,KAAzB;;AAEA,gBAAI,CAACF,cAAD,IAAmB,CAACF,UAAxB,EAAoC;AAClC,qBAAO,KAAKjB,EAAL,CAAQsB,IAAR,CAAa;AAClBC,sBAAM;AADY,eAAb,CAAP;AAGD;;AAED,gBAAIC,KAAK;AACP,6BAAeP,UADR;AAEP,uCAAyB,CAAE,IAAIQ,IAAJ,EAAD,CAAaC,iBAAb,EAFnB;AAGP,4CAA8B,KAHvB;AAIP,uBAAS;;AAGX;AAPS,aAAT,CAQA,KAAKZ,WAAL,CAAiBE,OAAjB,IAA4B,KAAKF,WAAL,CAAiBE,OAAjB,IAA4B,KAAKF,WAAL,CAAiBE,OAAjB,CAA5B,GAAwD;AAClFW,uBAAS,IADyE;AAElFC,2BAAa,CAFqE;AAGlFC,sBAAQ,KAH0E;AAIlFZ,0BAAYA;AAJsE,aAApF;;AAOA,mBAAO,KAAKjB,EAAL,CAAQ,UAAC8B,OAAD,EAAUC,MAAV,EAAqB;;AAElC,kBAAIC,YAAY,SAAZA,SAAY,CAACC,GAAD,EAAS;AACvBC,wBAAQC,GAAR,CAAY,aAAZ;AACAD,wBAAQC,GAAR,CAAYF,GAAZ;AACA;AACA,oBAAIA,IAAIG,MAAJ,IAAc,GAAlB,EAAuB;AACrB;AACA,wBAAKtB,WAAL,CAAiBE,OAAjB,EAA0BW,OAA1B,GAAoC,IAApC;AACA,wBAAKb,WAAL,CAAiBE,OAAjB,EAA0BY,WAA1B,IAAyC,CAAzC;AACA,sBAAI,MAAKd,WAAL,CAAiBE,OAAjB,EAA0BY,WAA1B,IAAyC,CAA7C,EAAgD;AAC9C,0BAAKS,aAAL,CAAmBrB,OAAnB,EAA4BQ,EAA5B,EAAgCT,OAAhC,EAAyCI,cAAzC,EAAyDF,UAAzD,EAAqEqB,IAArE,CAA0EC,SAA1E,EAAqFP,SAArF;AACD,mBAFD,MAEO;AACL,0BAAKlB,WAAL,CAAiBE,OAAjB,EAA0BY,WAA1B,GAAwC,CAAxC;AACD;AACF,iBATD,MASO;AACL,sBAAIK,IAAIG,MAAJ,GAAa,GAAjB,EAAsB;AACpB,0BAAKhC,UAAL,CAAgBoC,QAAhB,CAAyB,aAAzB,EAAwC,CAAC,aAAD,EAAgBP,IAAIV,IAApB,CAAxC;AACD,mBAFD,MAEO;AACL,0BAAKnB,UAAL,CAAgBoC,QAAhB,CAAyB,aAAzB,EAAwC,CAACP,IAAIG,MAAL,EAAaH,IAAIV,IAAjB,CAAxC;AACD;AACDO,0BAAQ;AACNP,0BAAM;AADA,mBAAR;AAGD;AACF,eAvBD;;AAyBA,kBAAIgB,YAAY,SAAZA,SAAY,CAACE,CAAD,EAAO;AACrB,oBAAIA,EAAElB,IAAF,CAAOmB,IAAX,EAAiB;AACfR,0BAAQC,GAAR,CAAY,YAAZ;;AAEA,wBAAKrB,WAAL,CAAiBE,OAAjB,EAA0BY,WAA1B,GAAwC,CAAxC;AACA,wBAAKd,WAAL,CAAiBE,OAAjB,EAA0BW,OAA1B,GAAoC,MAAKb,WAAL,CAAiBE,OAAjB,EAA0Ba,MAA1B,GAAmC,MAAKf,WAAL,CAAiBE,OAAjB,EAA0BW,OAA7D,GAAuE,IAA3G;;AAEAG,0BAAQ,MAAKa,cAAL,CAAoB5B,OAApB,EAA6B0B,CAA7B,EAAgC,YAAM;AAC5C,wBAAIjB,KAAK5B,EAAEgD,KAAF,CAAQH,EAAElB,IAAV,CAAT;AACA,wBAAIsB,kBAAkB,SAAtB;AACA,wBAAIC,cAActB,GAAGuB,QAAH,CAAYC,SAAZ,CAAsBC,MAAxC;AACA,wBAAIA,SAAS,EAAb;AACA,wBAAIC,aAAatD,EAAEuD,MAAF,CAAS3B,GAAGuB,QAAH,CAAYK,MAArB,EAA6B,UAACC,CAAD,EAAO;AACnD,6BAAOA,EAAE7C,IAAF,IAAUqC,eAAV,IAA6BQ,EAAE7C,IAAF,IAAUsC,WAA9C;AACD,qBAFgB,EAEd,CAFc,EAEXtC,IAFN;;AAIA;AACA,wBAAIsC,WAAJ,EAAiB;AACf;AACA,2BAAK,IAAIQ,IAAI,CAAb,EAAgBA,IAAIb,EAAElB,IAAF,CAAOgC,MAAP,CAAcC,MAAlC,EAA0CF,GAA1C,EAA+C;AAC7C,4BAAIG,KAAKhB,EAAElB,IAAF,CAAOgC,MAAP,CAAcD,CAAd,CAAT;AACA,4BAAI,CAACL,OAAOQ,GAAGX,WAAH,CAAP,CAAL,EAA8B;AAC5BG,iCAAOQ,GAAGX,WAAH,CAAP,IAA0B,CACxB,CAACW,GAAGP,UAAH,CAAD,EAAiBQ,SAASD,GAAGE,OAAZ,CAAjB,CADwB,CAA1B;AAGD,yBAJD,MAIO;AACLV,iCAAOQ,GAAGX,WAAH,CAAP,EAAwBc,IAAxB,CAA6B,CAACH,GAAGP,UAAH,CAAD,EAAiBQ,SAASD,GAAGE,OAAZ,CAAjB,CAA7B;AACD;AACF;;AAEDlB,wBAAElB,IAAF,GAAS3B,EAAEiE,IAAF,CAAOZ,MAAP,EAAea,GAAf,CAAmB,UAACC,CAAD,EAAO;AACjC,+BAAO;AACLC,kCAAQD,CADH;AAELE,sCAAYhB,OAAOc,CAAP;AAFP,yBAAP;AAID,uBALQ,CAAT;AAMD,qBAnBD,MAmBO;AACL;AACAtB,wBAAElB,IAAF,GAAS,CAAC;AACRyC,gCAAQd,UADA;AAERe,oCAAYzC,GAAG+B,MAAH,CAAUO,GAAV,CAAc,UAACL,EAAD,EAAQ;AAChC,iCAAO,CAACA,GAAGP,UAAH,CAAD,EAAiBQ,SAASD,GAAGE,OAAZ,CAAjB,CAAP;AACD,yBAFW;AAFJ,uBAAD,CAAT;AAMD;AACD,2BAAOlB,CAAP;AACD,mBAvCO,CAAR;AAwCD,iBA9CD,MA8CO;AACLP,0BAAQC,GAAR,CAAY,kBAAZ;AACAD,0BAAQC,GAAR,CAAY,KAAK,CAACM,EAAElB,IAAF,CAAOwB,QAAP,CAAgBmB,QAAhB,GAA2BzB,EAAElB,IAAF,CAAOwB,QAAP,CAAgBoB,SAA3C,GAAuD,GAAxD,EAA6DC,OAA7D,CAAqE,CAArE,CAAL,GAA+E,GAA3F;AACAC,6BAAW,YAAM;AACf,0BAAKhC,aAAL,CAAmBrB,OAAnB,EAA4BQ,EAA5B,EAAgCT,OAAhC,EAAyCI,cAAzC,EAAyDF,UAAzD,EAAqEqB,IAArE,CAA0EC,SAA1E,EAAqFP,SAArF;AACD,mBAFD,EAEG,IAFH;AAGD;AACF,eAtDD;;AAwDA,oBAAKK,aAAL,CAAmBrB,OAAnB,EAA4BQ,EAA5B,EAAgCT,OAAhC,EAAyCI,cAAzC,EAAyDF,UAAzD,EAAqEqB,IAArE,CAA0EC,SAA1E,EAAqFP,SAArF;AACD,aApFM,CAAP;AAqFD;;;yCAEcsC,Y,EAAc7B,C,EAAG8B,K,EAAO;AACrC,gBAAIC,gBAAgBF,aAAapD,OAAb,CAAqB,CAArB,CAApB;AACA,gBAAKsD,cAAcC,cAAd,CAA6B,MAA7B,MACCD,cAAcnE,IAAd,IAAsB,WAAvB,IAAwCmE,cAAcnE,IAAd,IAAsB,OAD9D,KAEAoC,EAAElB,IAAF,CAAOkD,cAAP,CAAsB,UAAtB,KAAqChC,EAAElB,IAAF,CAAOwB,QAAP,CAAgB0B,cAAhB,CAA+B,WAA/B,CAArC,IACChC,EAAElB,IAAF,CAAOwB,QAAP,CAAgBC,SAAhB,CAA0B0B,SAA1B,IAAuC,MAH7C,EAGuD;AACrD;AACA,qBAAOH,OAAP;AACD,aAND,MAMO,IAAI,CAACC,cAAcC,cAAd,CAA6B,MAA7B,CAAD,IACRhC,EAAElB,IAAF,CAAOkD,cAAP,CAAsB,UAAtB,KAAqChC,EAAElB,IAAF,CAAOwB,QAAP,CAAgB4B,WAAhB,IAA+B,IADhE,EACuE;AAC5E;AACA,qBAAOJ,OAAP;AACD,aAJM,MAIA;AACL;AACA,mBAAKnE,UAAL,CAAgBoC,QAAhB,CAAyB,aAAzB,EAAwC,CAAC,2BAAD,EAA8B,iDAA9B,CAAxC;AACA,qBAAO;AACLjB,sBAAM;AADD,eAAP;AAGD;AACF;;;wCAEaP,O,EAAS4D,O,EAASC,gB,EAAkB1D,c,EAAgBF,U,EAAY;AAAA;;AAE5E,gBAAI6D,UAAU,KAAK3E,SAAL,CAAe4E,MAAf,GAAwBD,OAAxB,IAAmC,IAAjD;AACA,gBAAIzD,QAAQwD,iBAAiBxD,KAA7B;;AAEAuD,oBAAQ/C,MAAR,GAAmBiD,WAAW,IAAZ,IAAsBjF,YAAYmF,cAAZ,CAA2B3D,MAAM4D,GAAN,CAAUC,EAArC,CAAxC;;AAEA,gBAAKN,QAAQ/C,MAAR,IAAkB,KAAKf,WAAL,CAAiBE,OAAjB,EAA0Ba,MAA7C,IACD,KAAKf,WAAL,CAAiBE,OAAjB,EAA0BC,UAA1B,IAAwCA,UAD3C,EACwD;AACtD,kBAAI,KAAKH,WAAL,CAAiBE,OAAjB,EAA0BW,OAA9B,EAAuC;AACrC,qBAAKwD,cAAL,CAAoB,KAAKrE,WAAL,CAAiBE,OAAjB,EAA0BW,OAA9C,EAAuDR,cAAvD;AACD;AACD,mBAAKL,WAAL,CAAiBE,OAAjB,EAA0BW,OAA1B,GAAoC,IAApC;AACA,mBAAKb,WAAL,CAAiBE,OAAjB,EAA0BC,UAA1B,GAAuCA,UAAvC;AACD;;AAED;AACA,gBAAI2D,QAAQ/C,MAAZ,EAAoB;AAClB+C,sBAAQQ,KAAR,GAAgBvF,YAAYwF,aAAZ,CAA0BhE,MAAM4D,GAAN,CAAUK,IAApC,CAAhB;AACA,qBAAO,KAAKC,iBAAL,CAAuBvE,OAAvB,EAAgC4D,OAAhC,EAAyCzD,cAAzC,CAAP;AACD,aAHD,MAGO;AACL,kBAAI,KAAKL,WAAL,CAAiBE,OAAjB,EAA0BW,OAA1B,IAAqC,IAAzC,EAA+C;AAC7C,uBAAO,KAAK6D,UAAL,CAAgB,KAAK1E,WAAL,CAAiBE,OAAjB,EAA0BW,OAA1C,EAAmDR,cAAnD,CAAP;AACD,eAFD,MAEO;AACLyD,wBAAQQ,KAAR,GAAgB/D,MAAMiE,IAAN,CAAWG,EAAX,CAAcC,OAAd,EAAhB;AACAd,wBAAQe,GAAR,GAActE,MAAM6D,EAAN,CAASO,EAAT,CAAYC,OAAZ,EAAd;AACA,uBAAO,KAAKE,UAAL,CAAgBhB,OAAhB,EAAyBzD,cAAzB,EAAyCmB,IAAzC,CAA8C,UAACG,CAAD,EAAO;AAC1D,yBAAK3B,WAAL,CAAiBE,OAAjB,EAA0BW,OAA1B,GAAoCc,EAAElB,IAAF,CAAOsE,EAA3C;AACA,yBAAK/E,WAAL,CAAiBE,OAAjB,EAA0Ba,MAA1B,GAAmC,KAAnC;AACA,yBAAO,OAAK2D,UAAL,CAAgB/C,EAAElB,IAAF,CAAOsE,EAAvB,EAA2B1E,cAA3B,CAAP;AACD,iBAJM,CAAP;AAKD;AACF;AACF;;;4CAEiBH,O,EAAS4D,O,EAASzD,c,EAAgB;AAAA;;AAClD,gBAAI,KAAKL,WAAL,CAAiBE,OAAjB,EAA0BW,OAA1B,IAAqC,IAAzC,EAA+C;AAC7C,qBAAO,KAAKiE,UAAL,CAAgBhB,OAAhB,EAAyBzD,cAAzB,EAAyCmB,IAAzC,CAA8C,UAACG,CAAD,EAAO;AAC1D,uBAAK3B,WAAL,CAAiBE,OAAjB,EAA0BW,OAA1B,GAAoCc,EAAElB,IAAF,CAAOsE,EAA3C;AACA,uBAAK/E,WAAL,CAAiBE,OAAjB,EAA0Ba,MAA1B,GAAmC,IAAnC;AACA,uBAAO,OAAK2D,UAAL,CAAgB/C,EAAElB,IAAF,CAAOsE,EAAvB,EAA2B1E,cAA3B,CAAP;AACD,eAJM,CAAP;AAKD,aAND,MAMO;AACL,qBAAO,KAAKqE,UAAL,CAAgB,KAAK1E,WAAL,CAAiBE,OAAjB,EAA0BW,OAA1C,EAAmDR,cAAnD,CAAP;AACD;AACF;;;qCAEUyD,O,EAASzD,c,EAAgB;AAClC,mBAAO,KAAK2E,SAAL,CAAe;AACpBxF,mBAAK,KAAKA,GAAL,GAAW,qBAAX,GAAmCa,cAAnC,GAAoD,YADrC;AAEpBI,oBAAMqD,OAFc;AAGpBmB,sBAAQ;AAHY,aAAf,CAAP;AAKD;;;qCAEUpE,O,EAASR,c,EAAgB;AAClC,mBAAO,KAAK2E,SAAL,CAAe;AACpBxF,mBAAK,KAAKA,GAAL,GAAW,qBAAX,GAAmCa,cAAnC,GAAoD,aAApD,GAAoEQ,OADrD;AAEpBoE,sBAAQ;AAFY,aAAf,CAAP;AAID;;;yCAEcpE,O,EAASR,c,EAAgB;AACtCe,oBAAQC,GAAR,CAAY,oBAAZ;AACA,mBAAO,KAAK2D,SAAL,CAAe;AACpBxF,mBAAK,KAAKA,GAAL,GAAW,qBAAX,GAAmCa,cAAnC,GAAoD,aAApD,GAAoEQ,OADrD;AAEpBoE,sBAAQ;AAFY,aAAf,CAAP;AAID;;;2CAEgB;AACf,mBAAO,KAAKD,SAAL,CAAe;AACpBxF,mBAAK,KAAKA,GAAL,GAAW,GADI;AAEpByF,sBAAQ;AAFY,aAAf,EAGJzD,IAHI,CAGC,oBAAY;AAClB,kBAAI0D,SAAS5D,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,uBAAO;AACLA,0BAAQ,SADH;AAEL6D,2BAAS,wBAFJ;AAGLC,yBAAO;AAHF,iBAAP;AAKD;AACF,aAXM,CAAP;AAYD;;;0CAGenF,O,EAAS;AACvBmB,oBAAQC,GAAR,CAAY,qBAAZ;AACA,gBAAIf,QAAQ,KAAKlB,WAAL,CAAiBK,OAAjB,CAAyBQ,QAAQoF,UAAR,CAAmB/E,KAA5C,EAAmD,EAAnD,EAAuD,MAAvD,CAAZ;AACA,gBAAIgF,kBAAkB;AACpB/E,qBAAON,QAAQM,KADK;AAEpB8E,0BAAY;AACV3F,sBAAMO,QAAQoF,UAAR,CAAmB3F,IADf;AAEV6F,4BAAYtF,QAAQoF,UAAR,CAAmBE,UAFrB;AAGVC,wBAAQvF,QAAQoF,UAAR,CAAmBG,MAHjB;AAIVC,2BAAWxF,QAAQoF,UAAR,CAAmBI,SAJpB;AAKVnF,uBAAOA;AALG,eAFQ;AASpBoF,wBAAUzF,QAAQyF;AATE,aAAtB;;AAYA,mBAAO,KAAKV,SAAL,CAAe;AACpBxF,mBAAK,KAAKA,GAAL,GAAW,cADI;AAEpByF,sBAAQ,MAFY;AAGpBxE,oBAAM6E;AAHc,aAAf,EAIJ9D,IAJI,CAIC,kBAAU;AAChB,qBAAOmE,OAAOlF,IAAd;AACD,aANM,CAAP;AAOD;;;oCAESR,O,EAAS;AACjBA,oBAAQ2F,eAAR,GAA0B,KAAKA,eAA/B;AACA3F,oBAAQN,OAAR,GAAkB,KAAKA,OAAvB;AACA,mBAAO,KAAKR,UAAL,CAAgB0G,iBAAhB,CAAkC5F,OAAlC,CAAP;AACD","file":"datasource.js","sourcesContent":["import _ from \"lodash\";\nimport { HumioHelper } from \"./helper\";\n\nexport class GenericDatasource {\n\n  constructor(instanceSettings, $q, backendSrv, templateSrv, $location, $rootScope) {\n    this.type = instanceSettings.type;\n    this.url = instanceSettings.url.replace(/\\/$/, '');\n    this.name = instanceSettings.name;\n\n    this.$q = $q;\n    this.$location = $location;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n    this.$rootScope = $rootScope;\n    // this.withCredentials = instanceSettings.withCredentials;\n\n    this.headers = {\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + instanceSettings.jsonData.humioToken\n    };\n\n    // TODO: not sure if this is right approach\n    this.timeRange = undefined;\n\n    // NOTE: session query storage\n    this.queryParams = {};\n  }\n\n  query(options) {\n    let panelId = options.panelId;\n    let humioQuery = options.targets[0].humioQuery;\n    let humioDataspace = options.targets[0].humioDataspace;\n    var query = options; // TODO: not needed really\n    this.timeRange = options.range;\n\n    if (!humioDataspace || !humioQuery) {\n      return this.$q.when({\n        data: []\n      });\n    }\n\n    var dt = {\n      \"queryString\": humioQuery,\n      \"timeZoneOffsetMinutes\": -(new Date()).getTimezoneOffset(),\n      \"showQueryEventDistribution\": false,\n      \"start\": \"24h\"\n    }\n\n    // NOTE: modifying query\n    this.queryParams[panelId] = this.queryParams[panelId] ? this.queryParams[panelId] : {\n      queryId: null,\n      failCounter: 0,\n      isLive: false,\n      humioQuery: humioQuery\n    };\n\n    return this.$q((resolve, reject) => {\n\n      let handleErr = (err) => {\n        console.log('fallback ->')\n        console.log(err);\n        // TODO: add a counter, if several times get a error - consider query to be invalid, or distinguish between error types\n        if (err.status == 401) {\n          // query not found - trying to recreate\n          this.queryParams[panelId].queryId = null;\n          this.queryParams[panelId].failCounter += 1;\n          if (this.queryParams[panelId].failCounter <= 3) {\n            this._composeQuery(panelId, dt, options, humioDataspace, humioQuery).then(handleRes, handleErr);\n          } else {\n            this.queryParams[panelId].failCounter = 0;\n          }\n        } else {\n          if (err.status = 400) {\n            this.$rootScope.appEvent('alert-error', ['Query error', err.data]);\n          } else {\n            this.$rootScope.appEvent('alert-error', [err.status, err.data]);\n          }\n          resolve({\n            data: []\n          });\n        }\n      }\n\n      let handleRes = (r) => {\n        if (r.data.done) {\n          console.log('query done');\n\n          this.queryParams[panelId].failCounter = 0;\n          this.queryParams[panelId].queryId = this.queryParams[panelId].isLive ? this.queryParams[panelId].queryId : null;\n\n          resolve(this._composeResult(options, r, () => {\n            let dt = _.clone(r.data);\n            let timeseriesField = \"_bucket\";\n            let seriesField = dt.metaData.extraData.series;\n            let series = {};\n            let valueField = _.filter(dt.metaData.fields, (f) => {\n              return f.name != timeseriesField && f.name != seriesField;\n            })[0].name;\n\n            // NOTE: aggregating result\n            if (seriesField) {\n              // multiple series\n              for (let i = 0; i < r.data.events.length; i++) {\n                let ev = r.data.events[i];\n                if (!series[ev[seriesField]]) {\n                  series[ev[seriesField]] = [\n                    [ev[valueField], parseInt(ev._bucket)]\n                  ];\n                } else {\n                  series[ev[seriesField]].push([ev[valueField], parseInt(ev._bucket)]);\n                }\n              }\n\n              r.data = _.keys(series).map((s) => {\n                return {\n                  target: s,\n                  datapoints: series[s]\n                }\n              })\n            } else {\n              // single series\n              r.data = [{\n                target: valueField,\n                datapoints: dt.events.map((ev) => {\n                  return [ev[valueField], parseInt(ev._bucket)];\n                })\n              }];\n            }\n            return r;\n          }));\n        } else {\n          console.log('query running...');\n          console.log(\"\" + (r.data.metaData.workDone / r.data.metaData.totalWork * 100).toFixed(2) + \"%\");\n          setTimeout(() => {\n            this._composeQuery(panelId, dt, options, humioDataspace, humioQuery).then(handleRes, handleErr);\n          }, 1000);\n        }\n      }\n\n      this._composeQuery(panelId, dt, options, humioDataspace, humioQuery).then(handleRes, handleErr);\n    });\n  }\n\n  _composeResult(queryOptions, r, resFx) {\n    let currentTarget = queryOptions.targets[0];\n    if ((currentTarget.hasOwnProperty('type') &&\n        ((currentTarget.type == 'timeserie') || (currentTarget.type == 'table')) &&\n        (r.data.hasOwnProperty('metaData') && r.data.metaData.hasOwnProperty('extraData') &&\n          r.data.metaData.extraData.timechart == 'true'))) {\n      // timechart\n      return resFx();\n    } else if (!currentTarget.hasOwnProperty('type') &&\n      (r.data.hasOwnProperty('metaData') && r.data.metaData.isAggregate == true)) {\n      // gauge\n      return resFx();\n    } else {\n      // unsuported query for this type of panel\n      this.$rootScope.appEvent('alert-error', ['Unsupported visualisation', 'can\\'t visulize the query result on this panel.']);\n      return {\n        data: []\n      }\n    }\n  }\n\n  _composeQuery(panelId, queryDt, grafanaQueryOpts, humioDataspace, humioQuery) {\n\n    let refresh = this.$location.search().refresh || null;\n    let range = grafanaQueryOpts.range;\n\n    queryDt.isLive = ((refresh != null) && (HumioHelper.checkToDateNow(range.raw.to)));\n\n    if ((queryDt.isLive != this.queryParams[panelId].isLive) ||\n      (this.queryParams[panelId].humioQuery != humioQuery)) {\n      if (this.queryParams[panelId].queryId) {\n        this._stopExecution(this.queryParams[panelId].queryId, humioDataspace);\n      }\n      this.queryParams[panelId].queryId = null;\n      this.queryParams[panelId].humioQuery = humioQuery;\n    };\n\n    // NOTE: setting date range\n    if (queryDt.isLive) {\n      queryDt.start = HumioHelper.parseDateFrom(range.raw.from);\n      return this._composeLiveQuery(panelId, queryDt, humioDataspace);\n    } else {\n      if (this.queryParams[panelId].queryId != null) {\n        return this._pollQuery(this.queryParams[panelId].queryId, humioDataspace);\n      } else {\n        queryDt.start = range.from._d.getTime();\n        queryDt.end = range.to._d.getTime();\n        return this._initQuery(queryDt, humioDataspace).then((r) => {\n          this.queryParams[panelId].queryId = r.data.id;\n          this.queryParams[panelId].isLive = false;\n          return this._pollQuery(r.data.id, humioDataspace);\n        });\n      };\n    };\n  }\n\n  _composeLiveQuery(panelId, queryDt, humioDataspace) {\n    if (this.queryParams[panelId].queryId == null) {\n      return this._initQuery(queryDt, humioDataspace).then((r) => {\n        this.queryParams[panelId].queryId = r.data.id;\n        this.queryParams[panelId].isLive = true;\n        return this._pollQuery(r.data.id, humioDataspace);\n      });\n    } else {\n      return this._pollQuery(this.queryParams[panelId].queryId, humioDataspace);\n    }\n  }\n\n  _initQuery(queryDt, humioDataspace) {\n    return this.doRequest({\n      url: this.url + '/api/v1/dataspaces/' + humioDataspace + '/queryjobs',\n      data: queryDt,\n      method: 'POST',\n    });\n  }\n\n  _pollQuery(queryId, humioDataspace) {\n    return this.doRequest({\n      url: this.url + '/api/v1/dataspaces/' + humioDataspace + '/queryjobs/' + queryId,\n      method: 'GET',\n    });\n  }\n\n  _stopExecution(queryId, humioDataspace) {\n    console.log('stopping execution');\n    return this.doRequest({\n      url: this.url + '/api/v1/dataspaces/' + humioDataspace + '/queryjobs/' + queryId,\n      method: 'DELETE',\n    });\n  }\n\n  testDatasource() {\n    return this.doRequest({\n      url: this.url + '/',\n      method: 'GET',\n    }).then(response => {\n      if (response.status === 200) {\n        return {\n          status: \"success\",\n          message: \"Data source is working\",\n          title: \"Success\"\n        };\n      }\n    });\n  }\n\n  // TODO: handle annotationQuery\n  annotationQuery(options) {\n    console.log('annotationQuery -> ');\n    var query = this.templateSrv.replace(options.annotation.query, {}, 'glob');\n    var annotationQuery = {\n      range: options.range,\n      annotation: {\n        name: options.annotation.name,\n        datasource: options.annotation.datasource,\n        enable: options.annotation.enable,\n        iconColor: options.annotation.iconColor,\n        query: query\n      },\n      rangeRaw: options.rangeRaw\n    };\n\n    return this.doRequest({\n      url: this.url + '/annotations',\n      method: 'POST',\n      data: annotationQuery\n    }).then(result => {\n      return result.data;\n    });\n  }\n\n  doRequest(options) {\n    options.withCredentials = this.withCredentials;\n    options.headers = this.headers;\n    return this.backendSrv.datasourceRequest(options);\n  }\n\n}\n"]}