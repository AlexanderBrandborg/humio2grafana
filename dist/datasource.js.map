{"version":3,"sources":["../src/datasource.js"],"names":["_","HumioHelper","GenericDatasource","instanceSettings","$q","backendSrv","templateSrv","$location","$rootScope","type","url","replace","name","headers","jsonData","humioToken","timeRange","undefined","queryParams","options","targets","length","resolve","data","panelId","humioQuery","humioDataspace","query","range","dt","Date","getTimezoneOffset","queryId","failCounter","isLive","reject","handleErr","err","console","log","status","_composeQuery","then","handleRes","appEvent","r","done","_composeResult","clone","timeseriesField","seriesField","metaData","extraData","series","valueField","filter","fields","f","i","events","ev","parseInt","_bucket","push","keys","map","s","target","datapoints","workDone","totalWork","toFixed","setTimeout","queryOptions","resFx","currentTarget","hasOwnProperty","timechart","isAggregate","queryDt","grafanaQueryOpts","refresh","search","checkToDateNow","raw","to","_stopExecution","start","parseDateFrom","from","_composeLiveQuery","_pollQuery","_d","getTime","end","_initQuery","id","doRequest","method","response","message","title","annotation","annotationQuery","datasource","enable","iconColor","rangeRaw","result","withCredentials","datasourceRequest"],"mappings":"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","file":"datasource.js","sourcesContent":["import _ from \"lodash\";\nimport { HumioHelper } from \"./helper\";\n\nexport class GenericDatasource {\n\n  constructor(instanceSettings, $q, backendSrv, templateSrv, $location, $rootScope) {\n    this.type = instanceSettings.type;\n    this.url = instanceSettings.url ? instanceSettings.url.replace(/\\/$/, '') : '';\n    this.name = instanceSettings.name;\n\n    this.$q = $q;\n    this.$location = $location;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n    this.$rootScope = $rootScope;\n\n    this.headers = {\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' +\n        (instanceSettings.jsonData ? (instanceSettings.jsonData.humioToken || 'developer') :\n          'developer')\n    };\n\n    // TODO: not sure if this is right approach\n    this.timeRange = undefined;\n\n    // NOTE: session query storage\n    this.queryParams = {};\n  }\n\n  query(options) {\n\n    // NOTE: if no tragests just return an empty result\n    if (options.targets.length == 0) {\n      return this.$q.resolve({\n        data: []\n      });\n    }\n\n    let panelId = options.panelId;\n    let humioQuery = options.targets[0].humioQuery;\n    let humioDataspace = options.targets[0].humioDataspace;\n    var query = options; // TODO: not needed really\n    this.timeRange = options.range;\n\n    // NOTE: if no humio dataspace or no query - consider configuration invalid\n    if (!humioDataspace || !humioQuery) {\n      return this.$q.resolve({\n        data: []\n      });\n    }\n\n    var dt = {\n      \"queryString\": humioQuery,\n      \"timeZoneOffsetMinutes\": -(new Date()).getTimezoneOffset(),\n      \"showQueryEventDistribution\": false,\n      \"start\": \"24h\"\n    }\n\n    // NOTE: modifying query\n    this.queryParams[panelId] = this.queryParams[panelId] ? this.queryParams[panelId] : {\n      queryId: null,\n      failCounter: 0,\n      isLive: false,\n      humioQuery: humioQuery\n    };\n\n    return this.$q((resolve, reject) => {\n\n      let handleErr = (err) => {\n        console.log('fallback ->')\n        console.log(err);\n        // TODO: add a counter, if several times get a error - consider query to be invalid, or distinguish between error types\n        if (err.status == 401) {\n          // query not found - trying to recreate\n          this.queryParams[panelId].queryId = null;\n          this.queryParams[panelId].failCounter += 1;\n          if (this.queryParams[panelId].failCounter <= 3) {\n            this._composeQuery(panelId, dt, options, humioDataspace, humioQuery).then(handleRes, handleErr);\n          } else {\n            this.queryParams[panelId].failCounter = 0;\n          }\n        } else {\n          if (err.status = 400) {\n            this.$rootScope.appEvent('alert-error', ['Query error', err.data]);\n          } else {\n            this.$rootScope.appEvent('alert-error', [err.status, err.data]);\n          }\n          resolve({\n            data: []\n          });\n        }\n      }\n\n      let handleRes = (r) => {\n        if (r.data.done) {\n          console.log('query done');\n\n          this.queryParams[panelId].failCounter = 0;\n          this.queryParams[panelId].queryId = this.queryParams[panelId].isLive ? \n            this.queryParams[panelId].queryId : null;\n\n          resolve(this._composeResult(options, r, () => {\n            let dt = _.clone(r.data);\n            let timeseriesField = \"_bucket\";\n            let seriesField = dt.metaData.extraData.series;\n            let series = {};\n            let valueField = _.filter(dt.metaData.fields, (f) => {\n              return f.name != timeseriesField && f.name != seriesField;\n            })[0].name;\n\n            // NOTE: aggregating result\n            if (seriesField) {\n              // multiple series\n              for (let i = 0; i < r.data.events.length; i++) {\n                let ev = r.data.events[i];\n                if (!series[ev[seriesField]]) {\n                  series[ev[seriesField]] = [\n                    [ev[valueField], parseInt(ev._bucket)]\n                  ];\n                } else {\n                  series[ev[seriesField]].push([ev[valueField], parseInt(ev._bucket)]);\n                }\n              }\n\n              r.data = _.keys(series).map((s) => {\n                return {\n                  target: s,\n                  datapoints: series[s]\n                }\n              })\n            } else {\n              // single series\n              r.data = [{\n                target: valueField,\n                datapoints: dt.events.map((ev) => {\n                  return [ev[valueField], parseInt(ev._bucket)];\n                })\n              }];\n            }\n            return r;\n          }));\n        } else {\n          console.log('query running...');\n          console.log(\"\" + (r.data.metaData.workDone / r.data.metaData.totalWork * 100).toFixed(2) + \"%\");\n          setTimeout(() => {\n            this._composeQuery(panelId, dt, options, humioDataspace, humioQuery).then(handleRes, handleErr);\n          }, 1000);\n        }\n      }\n\n      this._composeQuery(panelId, dt, options, humioDataspace, humioQuery).then(handleRes, handleErr);\n    });\n  }\n\n  _composeResult(queryOptions, r, resFx) {\n    let currentTarget = queryOptions.targets[0];\n    if ((currentTarget.hasOwnProperty('type') &&\n        ((currentTarget.type == 'timeserie') || (currentTarget.type == 'table')) &&\n        (r.data.hasOwnProperty('metaData') && r.data.metaData.hasOwnProperty('extraData') &&\n          r.data.metaData.extraData.timechart == 'true'))) {\n      // timechart\n      return resFx();\n    } else if (!currentTarget.hasOwnProperty('type') &&\n      (r.data.hasOwnProperty('metaData') && r.data.metaData.isAggregate == true)) {\n      // gauge\n      return resFx();\n    } else {\n      // unsuported query for this type of panel\n      this.$rootScope.appEvent('alert-error', ['Unsupported visualisation', 'can\\'t visulize the query result on this panel.']);\n      return {\n        data: []\n      }\n    }\n  }\n\n  _composeQuery(panelId, queryDt, grafanaQueryOpts, humioDataspace, humioQuery) {\n\n    let refresh = this.$location ? (this.$location.search().refresh || null) : null;\n    let range = grafanaQueryOpts.range;\n\n    queryDt.isLive = ((refresh != null) && (HumioHelper.checkToDateNow(range.raw.to)));\n\n    if ((queryDt.isLive != this.queryParams[panelId].isLive) ||\n      (this.queryParams[panelId].humioQuery != humioQuery)) {\n      if (this.queryParams[panelId].queryId) {\n        this._stopExecution(this.queryParams[panelId].queryId, humioDataspace);\n      }\n      this.queryParams[panelId].queryId = null;\n      this.queryParams[panelId].humioQuery = humioQuery;\n    };\n\n    // NOTE: setting date range\n    if (queryDt.isLive) {\n      queryDt.start = HumioHelper.parseDateFrom(range.raw.from);\n      return this._composeLiveQuery(panelId, queryDt, humioDataspace);\n    } else {\n      if (this.queryParams[panelId].queryId != null) {\n        return this._pollQuery(this.queryParams[panelId].queryId, humioDataspace);\n      } else {\n        queryDt.start = range.from._d.getTime();\n        queryDt.end = range.to._d.getTime();\n        return this._initQuery(queryDt, humioDataspace).then((r) => {\n          this.queryParams[panelId].queryId = r.data.id;\n          this.queryParams[panelId].isLive = false;\n          return this._pollQuery(r.data.id, humioDataspace);\n        });\n      };\n    };\n  }\n\n  _composeLiveQuery(panelId, queryDt, humioDataspace) {\n    if (this.queryParams[panelId].queryId == null) {\n      return this._initQuery(queryDt, humioDataspace).then((r) => {\n        this.queryParams[panelId].queryId = r.data.id;\n        this.queryParams[panelId].isLive = true;\n        return this._pollQuery(r.data.id, humioDataspace);\n      });\n    } else {\n      return this._pollQuery(this.queryParams[panelId].queryId, humioDataspace);\n    }\n  }\n\n  _initQuery(queryDt, humioDataspace) {\n    return this.doRequest({\n      url: this.url + '/api/v1/dataspaces/' + humioDataspace + '/queryjobs',\n      data: queryDt,\n      method: 'POST',\n    });\n  }\n\n  _pollQuery(queryId, humioDataspace) {\n    return this.doRequest({\n      url: this.url + '/api/v1/dataspaces/' + humioDataspace + '/queryjobs/' + queryId,\n      method: 'GET',\n    });\n  }\n\n  _stopExecution(queryId, humioDataspace) {\n    console.log('stopping execution');\n    return this.doRequest({\n      url: this.url + '/api/v1/dataspaces/' + humioDataspace + '/queryjobs/' + queryId,\n      method: 'DELETE',\n    });\n  }\n\n  testDatasource() {\n    return this.doRequest({\n      url: this.url + '/',\n      method: 'GET',\n    }).then(response => {\n      if (response.status === 200) {\n        return {\n          status: \"success\",\n          message: \"Data source is working\",\n          title: \"Success\"\n        };\n      }\n    });\n  }\n\n  // TODO: handle annotationQuery\n  annotationQuery(options) {\n    console.log('annotationQuery -> ');\n    var query = this.templateSrv.replace(options.annotation.query, {}, 'glob');\n    var annotationQuery = {\n      range: options.range,\n      annotation: {\n        name: options.annotation.name,\n        datasource: options.annotation.datasource,\n        enable: options.annotation.enable,\n        iconColor: options.annotation.iconColor,\n        query: query\n      },\n      rangeRaw: options.rangeRaw\n    };\n\n    return this.doRequest({\n      url: this.url + '/annotations',\n      method: 'POST',\n      data: annotationQuery\n    }).then(result => {\n      return result.data;\n    });\n  }\n\n  doRequest(options) {\n    options.withCredentials = this.withCredentials;\n    options.headers = this.headers;\n    return this.backendSrv.datasourceRequest(options);\n  }\n\n}\n"]}