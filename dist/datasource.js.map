{"version":3,"sources":["../src/datasource.js"],"names":["_","GenericDatasource","instanceSettings","$q","backendSrv","templateSrv","$location","type","url","name","withCredentials","token","jsonData","humioToken","humioDataspace","headers","basicAuth","length","queryParams","queryId","isLive","options","humioQuery","targets","query","buildQueryParameters","filter","t","hide","when","data","dt","Date","getTimezoneOffset","resolve","reject","handleRes","r","done","console","log","target","datapoints","events","map","ev","_count","parseInt","_bucket","metaData","workDone","totalWork","toFixed","setTimeout","_composeQuery","then","queryDt","grafanaQueryOpts","refresh","search","range","checkToDateNow","toDateCheck","match","raw","to","start","_parseDateFrom","from","_composeLiveQuery","_pollQuery","_d","getTime","end","_initQuery","id","doRequest","method","response","status","message","title","replace","annotation","annotationQuery","datasource","enable","iconColor","rangeRaw","result","text","value","d","i","isObject","datasourceRequest","scopedVars","refId","date"],"mappings":"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ELC,uBAAOxD,OAAOwD,KAFT;AAGLrE,sBAAMa,OAAOb,IAHR;AAILrB,sBAAMkC,OAAOlC,IAAP,IAAe;AAJhB,eAAP;AAMD,aAPa,CAAd;;AASAc,oBAAQE,OAAR,GAAkBA,OAAlB;;AAEA,mBAAOF,OAAP;AACD;;;yCAEc6E,I,EAAM;AACnB,oBAAQA,IAAR;AACE,mBAAK,QAAL;AACE;AACE,yBAAO,IAAP;AACD;AACD;AACF,mBAAK,QAAL;AACE;AACE,yBAAO,IAAP;AACD;AACD;AACF,mBAAK,SAAL;AACE;AACE,yBAAO,KAAP;AACD;AACD;AACF,mBAAK,SAAL;AACE;AACE,yBAAO,KAAP;AACD;AACD;AACF,mBAAK,QAAL;AACE;AACE,yBAAO,MAAP;AACD;AACD;AACF,mBAAK,QAAL;AACE;AACE,yBAAO,IAAP;AACD;AACD;AACF,mBAAK,QAAL;AACE;AACE,yBAAO,IAAP;AACD;AACD;AACF,mBAAK,QAAL;AACE;AACE,yBAAO,IAAP;AACD;AACD;AACF,mBAAK,UAAL;AACE;AACE,yBAAO,IAAP;AACD;AACD;AACF,mBAAK,UAAL;AACE;AACE,yBAAO,IAAP;AACD;AACD;AACF,mBAAK,UAAL;AACE;AACE,yBAAO,IAAP;AACD;AACD;AACF,mBAAK,UAAL;AACE;AACE,yBAAO,IAAP;AACD;AACD;AACF,mBAAK,UAAL;AACE;AACE,yBAAO,IAAP;AACD;AACD;AACF,mBAAK,UAAL;AACE;AACE,yBAAO,IAAP;AACD;AACD;AACF,mBAAK,OAAL;AACE;AACE,yBAAO,IAAP;AACD;AACD;AACF,mBAAK,OAAL;AACE;AACE,yBAAO,IAAP;AACD;AACD;AACF,mBAAK,OAAL;AACE;AACE,yBAAO,IAAP;AACD;AACD;AACF,mBAAK,OAAL;AACE;AACE,yBAAO,IAAP;AACD;AACD;AACF,mBAAK,QAAL;AACE;AACE,yBAAO,IAAP;AACD;AACD;AACF,mBAAK,SAAL;AACE;AACE,yBAAO,KAAP;AACD;AACD;AACF,mBAAK,SAAL;AACE;AACE,yBAAO,KAAP;AACD;AACD;AACF,mBAAK,QAAL;AACE;AACE,yBAAO,IAAP;AACD;AACD;AACF,mBAAK,QAAL;AACE;AACE,yBAAO,IAAP;AACD;AACD;AACF,mBAAK,QAAL;AACE;AACE,yBAAO,IAAP;AACD;AACD;AACF,mBAAK,SAAL;AACE;AACE,yBAAO,KAAP;AACD;AACD;AACF,mBAAK,SAAL;AACE;AACE,yBAAO,KAAP;AACD;AACD;AACF;AACE;AACE,yBAAO,KAAP;AACD;AACD;AAvIJ;AAyID","file":"datasource.js","sourcesContent":["import _ from \"lodash\";\n\nexport class GenericDatasource {\n\n  constructor(instanceSettings, $q, backendSrv, templateSrv, $location) {\n    this.type = instanceSettings.type;\n    this.url = instanceSettings.url;\n    this.name = instanceSettings.name;\n    this.$q = $q;\n    this.$location = $location;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n    this.withCredentials = instanceSettings.withCredentials;\n\n    // NOTE: humio specific options\n    this.token = instanceSettings.jsonData.humioToken;\n    this.humioDataspace = instanceSettings.jsonData.humioDataspace;\n\n    this.headers = {\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + instanceSettings.jsonData.humioToken\n    };\n\n    // TODO: remove\n    if (typeof instanceSettings.basicAuth === 'string' && instanceSettings.basicAuth.length > 0) {\n      this.headers['Authorization'] = instanceSettings.basicAuth;\n    }\n\n    // NOTE: session query storage\n    this.queryParams = {\n      queryId: null,\n      isLive: false\n    };\n\n  }\n\n  query(options) {\n\n    let humioQuery = options.targets[0].humioQuery;\n    var query = this.buildQueryParameters(options);\n\n    query.targets = query.targets.filter(t => !t.hide);\n\n    if (query.targets.length <= 0) {\n      return this.$q.when({\n        data: []\n      });\n    }\n\n    var dt = {\n      \"queryString\": humioQuery,\n      \"timeZoneOffsetMinutes\": -(new Date()).getTimezoneOffset(),\n      \"showQueryEventDistribution\": false,\n      \"start\": \"24h\"\n    }\n\n    return this.$q((resolve, reject) => {\n      let handleRes = (r) => {\n        if (r.data.done) {\n          console.log('query done');\n          this.queryParams.queryId = this.queryParams.isLive ? this.queryParams.queryId : null;\n          r.data = [{\n            target: \"_count\",\n            datapoints: r.data.events.map((ev) => {\n              return [ev._count, parseInt(ev._bucket)];\n            })\n          }];\n          resolve(r);\n        } else {\n          console.log('query running...');\n          console.log(\"\" + (r.data.metaData.workDone / r.data.metaData.totalWork * 100).toFixed(2) + \"%\");\n          setTimeout(() => {\n            this._composeQuery(dt, options).then(handleRes);\n          }, 1000);\n        }\n      }\n      this._composeQuery(dt, options).then(handleRes);\n    });\n  }\n\n  _composeQuery(queryDt, grafanaQueryOpts) {\n    let refresh = this.$location.search().refresh || null;\n    let range = grafanaQueryOpts.range;\n\n    let checkToDateNow = (toDateCheck) => {\n      if (typeof toDateCheck == \"string\") {\n        return toDateCheck.match(/^(now[^-]|now$)/) != null;\n      } else {\n        return false;\n      }\n    }\n\n    queryDt.isLive = ((refresh != null) && (checkToDateNow(range.raw.to)));\n    if (queryDt.isLive != this.queryParams.isLive) {\n      this.queryParams.queryId = null;\n    }\n\n    // NOTE: setting date range\n    if (queryDt.isLive) {\n      queryDt.start = this._parseDateFrom(range.raw.from);\n      return this._composeLiveQuery(queryDt);\n    } else {\n      if (this.queryParams.queryId != null) {\n        return this._pollQuery(this.queryParams.queryId);\n      } else {\n        queryDt.start = range.from._d.getTime();\n        queryDt.end = range.to._d.getTime();\n        return this._initQuery(queryDt).then((r) => {\n          this.queryParams.queryId = r.data.id;\n          this.queryParams.isLive = false;\n          return this._pollQuery(r.data.id);\n        });\n      }\n    }\n  }\n\n  _composeLiveQuery(queryDt) {\n    if (this.queryParams.queryId == null) {\n      return this._initQuery(queryDt).then((r) => {\n        this.queryParams.queryId = r.data.id;\n        this.queryParams.isLive = true;\n        return this._pollQuery(r.data.id);\n      });\n    } else {\n      return this._pollQuery(this.queryParams.queryId);\n    }\n  }\n\n  _initQuery(queryDt) {\n    return this.doRequest({\n      url: this.url + '/api/v1/dataspaces/' + this.humioDataspace + '/queryjobs',\n      data: queryDt,\n      method: 'POST',\n    })\n  }\n\n  _pollQuery(queryId) {\n    return this.doRequest({\n      url: this.url + '/api/v1/dataspaces/' + this.humioDataspace + '/queryjobs/' + queryId,\n      method: 'GET',\n    })\n  }\n\n  testDatasource() {\n    console.log(\"-> 10\");\n    return this.doRequest({\n      url: this.url + '/',\n      method: 'GET',\n    }).then(response => {\n      if (response.status === 200) {\n        return {\n          status: \"success\",\n          message: \"Data source is working\",\n          title: \"Success\"\n        };\n      }\n    });\n  }\n\n  annotationQuery(options) {\n    var query = this.templateSrv.replace(options.annotation.query, {}, 'glob');\n    var annotationQuery = {\n      range: options.range,\n      annotation: {\n        name: options.annotation.name,\n        datasource: options.annotation.datasource,\n        enable: options.annotation.enable,\n        iconColor: options.annotation.iconColor,\n        query: query\n      },\n      rangeRaw: options.rangeRaw\n    };\n\n    return this.doRequest({\n      url: this.url + '/annotations',\n      method: 'POST',\n      data: annotationQuery\n    }).then(result => {\n      return result.data;\n    });\n  }\n\n  metricFindQuery(query) {\n    // TODO: for now handling only timechart queries\n    return [{\n      text: \"_count\",\n      value: \"_count\",\n    }];\n  }\n\n  mapToTextValue(result) {\n    return _.map(result.data, (d, i) => {\n      if (d && d.text && d.value) {\n        return {\n          text: d.text,\n          value: d.value\n        };\n      } else if (_.isObject(d)) {\n        return {\n          text: d,\n          value: i\n        };\n      }\n      return {\n        text: d,\n        value: d\n      };\n    });\n  }\n\n  doRequest(options) {\n    options.withCredentials = this.withCredentials;\n    options.headers = this.headers;\n\n    return this.backendSrv.datasourceRequest(options);\n  }\n\n  buildQueryParameters(options) {\n    //remove placeholder targets\n    options.targets = _.filter(options.targets, target => {\n      return target.target !== 'select metric';\n    });\n\n    var targets = _.map(options.targets, target => {\n      return {\n        target: this.templateSrv.replace(target.target, options.scopedVars, 'regex'),\n        refId: target.refId,\n        hide: target.hide,\n        type: target.type || 'timeserie'\n      };\n    });\n\n    options.targets = targets;\n\n    return options;\n  }\n\n  _parseDateFrom(date) {\n    switch (date) {\n      case 'now-2d':\n        {\n          return '2d';\n        }\n        break;\n      case 'now-7d':\n        {\n          return '7d';\n        }\n        break;\n      case 'now-30d':\n        {\n          return '30d';\n        }\n        break;\n      case 'now-90d':\n        {\n          return '90d';\n        }\n        break;\n      case 'now-6M':\n        {\n          return '180d';\n        }\n        break;\n      case 'now-1y':\n        {\n          return '1y';\n        }\n        break;\n      case 'now-2y':\n        {\n          return '2y';\n        }\n        break;\n      case 'now-5y':\n        {\n          return '5y';\n        }\n        break;\n      case 'now-1d/d':\n        {\n          return '1d';\n        }\n        break;\n      case 'now-2d/d':\n        {\n          return '2d';\n        }\n        break;\n      case 'now-7d/d':\n        {\n          return '7d';\n        }\n        break;\n      case 'now-1w/w':\n        {\n          return '7d';\n        }\n        break;\n      case 'now-1M/M':\n        {\n          return '1m';\n        }\n        break;\n      case 'now-1y/y':\n        {\n          return '1y';\n        }\n        break;\n      case 'now/d':\n        {\n          return '1d';\n        }\n        break;\n      case 'now/w':\n        {\n          return '7d';\n        }\n        break;\n      case 'now/M':\n        {\n          return '1m';\n        }\n        break;\n      case 'now/y':\n        {\n          return '1y';\n        }\n        break;\n      case 'now-5m':\n        {\n          return '5m';\n        }\n        break;\n      case 'now-15m':\n        {\n          return '15m';\n        }\n        break;\n      case 'now-30m':\n        {\n          return '30m';\n        }\n        break;\n      case 'now-1h':\n        {\n          return '1h';\n        }\n        break;\n      case 'now-3h':\n        {\n          return '3h';\n        }\n        break;\n      case 'now-6h':\n        {\n          return '6h';\n        }\n        break;\n      case 'now-12h':\n        {\n          return '12h';\n        }\n        break;\n      case 'now-24h':\n        {\n          return '24h';\n        }\n        break;\n      default:\n        {\n          return '24h';\n        }\n        break;\n    }\n  }\n}\n"]}